#!/usr/bin/env groovy

def projectProperties = [
        [$class: 'BuildDiscarderProperty', strategy: [$class: 'LogRotator', numToKeepStr: '5']],
        parameters([          
            string(name: 'Git_URL', defaultValue: 'https://github.com/ygqbasic/microservice-sp.git', description: '源码地址'),
            string(name: 'DOCKER_USER', defaultValue: 'yangguoqing89@126.com', description: 'docker用户名'),
            string(name: 'DOCKER_PASSWORD', defaultValue: "p@ssw0rd`123", description: 'docker用户密码'),
            string(name: 'REGISTRY_URL', defaultValue: 'registry.cn-hangzhou.aliyuncs.com', description: 'docker仓库地址')
        ])
]

properties(projectProperties)

def label = "mypod-${UUID.randomUUID().toString()}"

podTemplate(label: label, cloud: 'kubernetes', containers: [
            containerTemplate(name: 'maven', image: 'maven', command: 'cat', ttyEnabled: true),
            containerTemplate(name: 'docker', image: 'docker', command: 'cat', ttyEnabled: true),
            containerTemplate(name: 'kubectl', image: 'lachlanevenson/k8s-kubectl:v1.10.2', command: 'cat', ttyEnabled: true) ],
            volumes: [
                    hostPathVolume(hostPath: '/var/run/docker.sock', mountPath: '/var/run/docker.sock'),
                    hostPathVolume(hostPath: '/root/.kube', mountPath: '/root/.kube'),
                    hostPathVolume(hostPath: '/root/.m2', mountPath: '/root/.m2')
                    ]) {

    node(label) {

        def gitCommit
        def shortGitCommit='1.0'
        def previousGitCommit

        container('maven') {

            stage('checkout') {
                 echo "start fetch code from git:'${params.Git_URL}'"
                //清空当前目录
                deleteDir()
                //拉去代码  
                git credentialsId:'1991a619-a35f-4290-95d8-a41ab6ef0e22',url:"${params.Git_URL}"

            }

            stage('pacakge') {
                echo "start compile"
                dir('./clouddo-common'){
                    sh 'mvn clean install -Dmaven.test.skip=true -s settings.xml'
                }
                dir('./clouddo-base'){
                    sh 'mvn clean package -Dmaven.test.skip=true -s settings.xml'
                }
            }
        }

        container('docker') {
            
            stage('docker-login') {
                //REGISTRY_URL私有仓库地址，也可使用官方地址：docker.io
                sh "docker login -u ${params.DOCKER_USER} -p '${params.DOCKER_PASSWORD}' ${params.REGISTRY_URL}"
            }

            stage('docker-build') {
                sh "docker build ./clouddo-base -t ${params.REGISTRY_URL}/ygqbasic/clouddo-base:${shortGitCommit}"
            }

            stage('docker-push') {
                sh "docker push ${params.REGISTRY_URL}/ygqbasic/clouddo-base:${shortGitCommit}"
            }
        }


        container('kubectl') {
            stage('k8s deploy') {
                dir('./k8s-templates'){
                    sh "sed -i \"s/ygqbasic\\/clouddo-base/${params.REGISTRY_URL}\\/ygqbasic\\/clouddo-base:${shortGitCommit}/g\" clouddo-base.yaml"
                    sh "kubectl --kubeconfig=/root/.kube/config apply -f clouddo-base.yaml"
                }
            }
        }

    }
}
